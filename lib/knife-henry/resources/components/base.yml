---
name: base
berks: |
  cookbook 'chef-solo-search', git: 'https://github.com/edelight/chef-solo-search.git'
  cookbook 'denyhosts', git: 'https://github.com/phlipper/chef-denyhosts.git'
  cookbook 'packages', git: 'https://github.com/bbg-cookbooks/packages.git'
  cookbook 'monit', git: 'https://github.com/blueboxgroup/monit.git'
  cookbook 'user', git: 'https://github.com/fnichol/chef-user.git'
  cookbook 'build-essential'
  cookbook 'timezone-ii'
  cookbook 'logrotate'
  cookbook 'rsyslog'
  cookbook 'openssh'
  cookbook 'sudo'
  cookbook 'cron'
  cookbook 'yum'
  cookbook 'apt'
role: |
  name 'base'

  default_attributes(
    'tz' => 'UTC',
    'authorization' => {
      'sudo' => {
        'users'             => %w{admin},
        'passwordless'      => true,
        'include_sudoers_d' => true,
        'sudoers_defaults'  => [
          'env_reset',
          'secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"',
        ],
      },
    },
    'user' => {
      'ssh_keygen' => false,
    },
    'users' => %w{admin},
    'openssh' => {
      'server' => {
        'rsa_authentication'     => 'yes',
        'pub_key_authentication' => 'yes',
        'permit_root_login'      => 'without-password',
      },
    }
  )

  run_list %w{
    recipe[chef-solo-search]
    recipe[timezone-ii]
    recipe[rsyslog]
    recipe[openssh]
    recipe[denyhosts]
    recipe[user::data_bag]
    recipe[sudo]
    recipe[logrotate]
    recipe[monit]
    recipe[<%= @cookbook %>::base]
  }
recipe: |
  %w{vim passwd postfix telnet}.each do |pkg|
    package pkg
  end

  package 'sendmail' do
    action :purge
  end

  rsyslog_pid = value_for_platform_family(
                  'rhel'   => '/var/run/syslogd.pid',
                  'debian' => '/var/run/rsyslogd.pid',
                )

  monit_check 'rsyslog' do
    check_id rsyslog_pid
    group 'system'
    start '/etc/init.d/rsyslog start'
    stop '/etc/init.d/rsyslog stop'
    tests [
      {
        'condition' => '4 restarts within 5 cycles',
        'action'    => 'timeout',
      }
    ]
  end

  monit_check 'postfix' do
    check_id '/var/spool/postfix/pid/master.pid'
    group 'system'
    start '/etc/init.d/postfix start'
    stop  '/etc/init.d/postfix stop'
    service_tests [
      {
        'condition' => 'failed port 25 proto smtp 2 times within 3 cycles',
        'action'    => 'restart',
      },
      {
        'condition' => '3 restarts within 5 cycles',
        'action'    => 'alert',
      },
    ]
  end

  sshd_init = value_for_platform_family(
               'rhel'   => '/etc/init.d/sshd',
               'debian' => '/etc/init.d/ssh'
             )

  monit_check 'sshd' do
    check_id '/var/run/sshd.pid'
    group 'system'
    start "#{sshd_init} start"
    stop "#{sshd_init} stop"
    tests [
      {
        'condition' => 'failed port 22 proto ssh 2 times within 3 cycles',
        'action'    => 'restart',
      },
      {
        'condition' => '3 restarts within 5 cycles',
        'action'    => 'alert',
      },
    ]
  end

  crond_init = value_for_platform_family(
                 'rhel'   => '/etc/init.d/crond',
                 'debian' => '/etc/init.d/cron',
               )

  monit_check 'crond' do
    check_id '/var/run/crond.pid'
    group 'system'
    start "#{crond_init} start"
    stop "#{crond_init} stop"
    tests [
      {
        'condition' => '3 restarts within 5 cycles',
        'action'    => 'alert',
      },
    ]
  end
